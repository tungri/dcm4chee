/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is part of dcm4che, an implementation of DICOM(TM) in
 * Java(TM), hosted at http://sourceforge.net/projects/dcm4che.
 *
 * The Initial Developer of the Original Code is
 * Agfa Healthcare.
 * Portions created by the Initial Developer are Copyright (C) 2010
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Gunter Zeilinger <gunterze@gmail.com>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK *****
 *  This file was automatically generated by XSLT from
 *  src/etc/dictionary.xml applying stylesheet src/etc/DirRecords.xsl
 *  Manually modifications will be lost with next auto generation. For
 *  permanent modification edit the XML source or/and the XSL stylesheet.
 */

package org.dcm4che.media;

import java.util.HashMap;

/** Provide Directory Record Type for Storage SOP Class.
 *
 * @author gunter zeilinger
 */
public class DirRecordTypes {

    private static HashMap REC_TYPE_MAP = new HashMap(119);

    static {
        REC_TYPE_MAP.put("1.2.840.10008.5.1.1.27", "STORED PRINT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.1.29", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.1.30", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.1.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.1.1.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.1.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.1.2.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.1.3", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.1.3.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.2.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.3", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.3.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.4", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.4.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.4.2", "SPECTROSCOPY");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.4.3", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.5", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.6", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.6.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.6.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.7", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.7.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.7.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.7.3", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.7.4", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.8", "OVERLAY");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9", "CURVE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.1.1", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.1.2", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.1.3", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.2.1", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.3.1", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.4.1", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.5.1", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.6.1", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.9.4.2", "WAVEFORM");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.10", "MODALITY LUT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.11", "VOILUT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.11.1", "PRESENTATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.11.2", "PRESENTATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.11.3", "PRESENTATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.11.4", "PRESENTATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.11.5", "PRESENTATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.12.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.12.1.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.12.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.12.2.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.12.3", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.13.1.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.13.1.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.13.1.3", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.20", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.66", "RAW DATA");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.66.1", "REGISTRATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.66.2", "FIDUCIAL");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.66.3", "REGISTRATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.66.4", "SEGMENTATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.66.5", "SEGMENTATION");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.67", "VALUE MAP");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.3", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.4", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.1.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.2.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.4.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.5.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.5.2", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.5.3", "STEREOMETRIC");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.5.4", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.77.1.6", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.1", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.3", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.4", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.11", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.22", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.33", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.40", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.50", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.59", "KEY OBJECT DOC");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.65", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.67", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.88.69", "SR DOCUMENT");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.104.1", "ENCAP DOC");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.104.2", "HL7 STRUC DOC");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.128", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.129", "CURVE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.130", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.1", "IMAGE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.2", "RT DOSE");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.3", "RT STRUCTURE SET");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.4", "RT TREAT RECORD");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.5", "RT PLAN");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.6", "RT TREAT RECORD");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.7", "RT TREAT RECORD");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.8", "RT PLAN");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.1.1.481.9", "RT TREAT RECORD");
        REC_TYPE_MAP.put("1.2.840.10008.5.1.4.38.1", "HANGING PROTOCOL");
    }

    /** Private constructor */
    private DirRecordTypes() {
    }

    public static String getRecordType(String uid) {
        String type = (String) REC_TYPE_MAP.get(uid);
        return type != null ? type : "PRIVATE";
    }
}
